#!/usr/bin/env ruby
# frozen_string_literal: true

require 'bundler/setup'
require 'dotenv/load'
require 'chef-ai-assistant'
require 'tty-spinner'
require 'tty-prompt'

# Check if API credentials are set
unless ENV['AZURE_OPENAI_API_KEY'] && ENV['AZURE_OPENAI_ENDPOINT'] && ENV['AZURE_OPENAI_DEPLOYMENT_NAME']
  prompt = TTY::Prompt.new
  prompt.error('Please set the following environment variables in a .env file:')
  puts '  AZURE_OPENAI_API_KEY=your_api_key'
  puts '  AZURE_OPENAI_ENDPOINT=https://your-resource.openai.azure.com'
  puts '  AZURE_OPENAI_DEPLOYMENT_NAME=your_deployment_name'
  exit 1
end

# Configure the AI assistant
spinner = TTY::Spinner.new('[:spinner] Configuring ChefAiAssistant...', format: :dots)
spinner.auto_spin
begin
  ChefAiAssistant.configure do |config|
    config.api_key = ENV['AZURE_OPENAI_API_KEY']
    config.api_version = ENV['AZURE_OPENAI_API_VERSION'] || '2023-05-15'
    config.azure_endpoint = ENV['AZURE_OPENAI_ENDPOINT']
    config.deployment_name = ENV['AZURE_OPENAI_DEPLOYMENT_NAME']
  end
  spinner.success('(✓)')
rescue StandardError => e
  spinner.error('(✗)')
  prompt = TTY::Prompt.new
  prompt.error("Configuration failed: #{e.message}")
  exit 1
end

# Check command line arguments
if ARGV.empty?
  require 'tty-prompt'
  prompt = TTY::Prompt.new

  puts "Usage: #{$PROGRAM_NAME} COMMAND [arguments]"
  puts "\n#{prompt.decorate('Available commands:', :bold)}"
  puts "  #{prompt.decorate('ai', :blue).ljust(17)} Chef AI Assistant commands"
  puts "\nRun '#{prompt.decorate("#{$PROGRAM_NAME} COMMAND --help",
                                 :cyan)}' for more information on a specific command."
  exit 1
end

# Handle commands directly
command = ARGV[0]
if command == 'ai'
  # Create an instance of the AI command
  ai_command = ChefAiAssistant::Commands::Ai.new

  # Run the AI command with the remaining arguments
  exit_code = ai_command.run(ARGV[1..-1])

  exit(exit_code || 0)
else
  prompt = TTY::Prompt.new
  prompt.error("Unknown command: #{command}")

  puts "Usage: #{$PROGRAM_NAME} COMMAND [arguments]"
  puts "\n#{prompt.decorate('Available commands:', :bold)}"
  puts "  #{prompt.decorate('ai', :blue).ljust(17)} Chef AI Assistant commands"
  puts "\nRun '#{prompt.decorate("#{$PROGRAM_NAME} COMMAND --help",
                                 :cyan)}' for more information on a specific command."
  exit 1
end
